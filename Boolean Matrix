Given a boolean matrix of size RxC where each cell contains either 0 or 1, modify it such that if a matrix cell matrix[i][j] is 1 then all the cells in its ith row and jth column will become 1.

Example 1:

Input:
matrix[][] = {{1, 0},
              {0, 0}}
Output: 
1 1
1 0 
Explanation:
Only cell that has 1 is at (0,0) so all 
cells in row 0 are modified to 1 and all 
cells in column 0 are modified to 1.




def modifyMatrix(matrix):
    rows, cols = len(matrix), len(matrix[0])
    
    # Create arrays to keep track of rows and columns that need to be updated
    row_to_update = [False] * rows
    col_to_update = [False] * cols
    
    # Identify rows and columns that need to be updated
    for i in range(rows):
        for j in range(cols):
            if matrix[i][j] == 1:
                row_to_update[i] = True
                col_to_update[j] = True
    
    # Update the matrix based on the identified rows and columns
    for i in range(rows):
        for j in range(cols):
            if row_to_update[i] or col_to_update[j]:
                matrix[i][j] = 1
    
    return matrix

# Example usage
matrix = [[1, 0], [0, 0]]
result = modifyMatrix(matrix)
for row in result:
    print(row)
